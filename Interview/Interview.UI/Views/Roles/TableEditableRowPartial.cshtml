@model VmIndex
@using Interview.UI.Models.Roles
@using Interview.Entities
@inject IViewLocalizer localizer

@{

    string cultureName = System.Globalization.CultureInfo.CurrentCulture.Name;
    UserSetting userSetting = ViewBag.UserSetting;
    string userName = $"{userSetting.UserLastname}, {userSetting.UserFirstname}";

    var rolesItems = Html.GetEnumSelectList<VmRoleTypes>().ToList();
    rolesItems.Insert(0, new SelectListItem(localizer["PleaseSelect"].Value, ""));
    rolesItems.Where(x => x.Value == ((int)userSetting.RoleType).ToString()).First().Selected = true;

    List<UserLanguage> userLanguages = ViewBag.UserLanguages;
    List<SelectListItem> userLanguageItems = new List<SelectListItem>();
    foreach (var userLanguage in userLanguages)
    {
        userLanguageItems.Add(new SelectListItem()
        {         
            Value = userLanguage.Id.ToString(),
            Text = cultureName == Constants.EnglishCulture ? userLanguage.NameEN : userLanguage.NameFR
        });
    }

    bool showEquities = ViewBag.ShowEquities;

}

<tr>
    <form id="editForm" action="/Roles/UpdateUserSettings" method="post">
        <input type="hidden" value="@Model.UserSettingToEdit.Id" id="Id" name="Id" />
        @Html.AntiForgeryToken()
        <td>@userName</td>
        <td>@Html.DropDownList("RoleType", rolesItems, new { @class = "form-control" })</td>
        <td>@Html.DropDownList("UserLanguageId", userLanguageItems, new { @class = "form-control" })</td>
        @if (showEquities)
        {
            <td>
                @{
                    for (int i = 0; i < Model.Equities.Count; i++)
                    {
                        ViewData.TemplateInfo.HtmlFieldPrefix = $"Equities[{i.ToString()}]";
                        VmEquity vmEquity = Model.Equities[i];
                        vmEquity.IsSelected = Model.UserSettingToEdit.UserSettingEquities.Any(x => x.EquityId == vmEquity.Id);
                        ViewBag.EquityIndex = i;
                        await Html.RenderPartialAsync("EquityEditCheckbox", vmEquity);
                    }
                    ViewData.TemplateInfo.HtmlFieldPrefix = "";
                }
            </td>
        }
        <td>
            <a href="@Url.Action("Index", "Roles")">
                <span class="glyphicon glyphicon-remove text-danger"></span>
            </a>
            <a id="aSubmit" href="@Url.Action("UpdateUserSettings", "Roles", new { userSettingsId = Model.UserSettingToEdit.Id } )">
                <span class="glyphicon glyphicon-ok text-success"></span>
            </a>
        </td>   
    </form>
</tr>