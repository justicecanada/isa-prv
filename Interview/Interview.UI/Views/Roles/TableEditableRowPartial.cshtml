@model VmIndex
@using Interview.UI.Models.Roles
@using Interview.Entities
@inject IViewLocalizer localizer

@{

    string cultureName = System.Globalization.CultureInfo.CurrentCulture.Name;
    Process process = ViewBag.Process;
    RoleUser roleUser = ViewBag.RoleUser;
    string userName = $"{roleUser.UserLastname}, {roleUser.UserFirstname}";

    var roleUserTypeItems = Html.GetEnumSelectList<VmRoleUserTypes>().ToList();
    roleUserTypeItems.Insert(0, new SelectListItem(localizer["PleaseSelect"].Value, ""));
    roleUserTypeItems.Where(x => x.Value == ((int)roleUser.RoleUserType).ToString()).First().Selected = true;

    var userLanguageItems = Html.GetEnumSelectList<VmLanguageTypes>().ToList();
    userLanguageItems.Insert(0, new SelectListItem(localizer["PleaseSelect"].Value, ""));
    if (roleUser.LanguageType != null)
        userLanguageItems.Where(x => x.Value == ((int)roleUser.LanguageType).ToString()).First().Selected = true;

    bool showEquities = ViewBag.ShowEquities;
    bool canEditRole = false;
    if (roleUser.RoleUserType != RoleUserTypes.Candidate)
    {
        if (roleUser.RoleUserType == RoleUserTypes.BoardMember || roleUser.RoleUserType == RoleUserTypes.BoardMemberLead)
            canEditRole = !process.Interviews.Any(x => x.InterviewUsers.Any(x => x.UserId == roleUser.Id));
        else
            canEditRole = true;
    }

}

<tr>
    <form id="editForm" action="/Roles/UpdateRoleUser" method="post">
        <input type="hidden" value="@Model.RoleUserToEdit.Id" id="Id" name="Id" />
        @Html.AntiForgeryToken()
        <td>@userName</td>
        <td>
            @if (canEditRole)
            {
                @Html.DropDownList("RoleUserType", roleUserTypeItems, new { @class = "form-control" })
            }
            else
            {
                string roleName = localizer[roleUser.RoleUserType.ToString()].Value;
                @roleName
                <input type="hidden" id="RoleUserType" name="RoleUserType" value="@Model.RoleUserToEdit.RoleUserType">
            }
        </td>
        <td>@Html.DropDownList("LanguageType", userLanguageItems, new { @class = "form-control" })</td>
        @if (showEquities)
        {
            <td>
                @{
                    for (int i = 0; i < Model.Equities.Count; i++)
                    {
                        ViewData.TemplateInfo.HtmlFieldPrefix = $"Equities[{i.ToString()}]";
                        VmEquity vmEquity = Model.Equities[i];
                        vmEquity.IsSelected = Model.RoleUserToEdit.RoleUserEquities.Any(x => x.EquityId == vmEquity.Id);
                        ViewBag.EquityIndex = i;
                        await Html.RenderPartialAsync("EquityEditCheckbox", vmEquity);
                    }
                    ViewData.TemplateInfo.HtmlFieldPrefix = "";
                }
            </td>
        }
        <td>
            <a href="@Url.Action("Index", "Roles")">
                <span class="glyphicon glyphicon-remove text-danger"></span>
            </a>
            <a id="aSubmit" href="@Url.Action("UpdateRoleUser", "Roles", new { roleUserId = Model.RoleUserToEdit.Id } )">
                <span class="glyphicon glyphicon-ok text-success"></span>
            </a>
        </td>   
    </form>
</tr>