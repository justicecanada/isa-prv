@using Interview.Entities
@inject IViewLocalizer localizer

@{

    string heading = localizer["TimeSlots"].Value;
    string cultureName = System.Globalization.CultureInfo.CurrentCulture.Name;

    List<Equity> equities = ViewBag.Equities;
    List<RoleUser> roleUsers = ViewBag.RoleUsers;
    List<Interview> interviews = ViewBag.Interviews;
    List<InterviewUser> filteredInterviewUsers = interviews.SelectMany(x => x.InterviewUsers.Where(y => (y.RoleUserType == RoleUserTypes.Candidate))).ToList();

}

@functions {

    private string GetEquityLine(Equity equity, List<Interview> interviews, List<InterviewUser> filteredInterviewUsers, List<RoleUser> roleUsers, string cultureName)
    {

        string result = null;

        List<RoleUserEquity> roleUserEquities = roleUsers.SelectMany(x => x.RoleUserEquities).ToList();
        int count = interviews.SelectMany(x => x.InterviewUsers.Where(y => (y.RoleUserType == RoleUserTypes.Candidate) &&
            roleUserEquities.Where(a => a.RoleUserId == y.UserId && a.EquityId == equity.Id).Count() > 0)).Count();
        string descriptionPrefix = localizer["TimeSlotWithBoardMember"].Value;
        string description = cultureName == Constants.EnglishCulture ? $"{descriptionPrefix} {equity.NameEN}" : $"{descriptionPrefix} {equity.NameFR}";
        double percentage = filteredInterviewUsers.Count == 0 ? 0 : Math.Round(((double)count / (double)filteredInterviewUsers.Count) * 100, 2);

        result = $"{count} / {filteredInterviewUsers.Count} {description} (<strong>{percentage}%</strong>)";

        return result;

    }

}

<section class="panel panel-default">
    <header class="panel-heading">
        <h5 class="panel-title">@heading</h5>
    </header>
    <div class="panel-body">
        @foreach (Equity equity in equities)
        {
            <div>@Html.Raw(GetEquityLine(equity, interviews, filteredInterviewUsers, roleUsers, cultureName))</div>
        }
    </div>
</section>