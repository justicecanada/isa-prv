@model VmInterviewerUserIds
@using Interview.Entities
@using Interview.UI.Models.Default
@using Interview.UI.Services.Mock.Identity
@inject IViewLocalizer localizer
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{

    List<RoleUser> candidateUsers = ViewBag.CandidateUsers;
    List<SelectListItem> candidateUsersItems = new List<SelectListItem>();
    candidateUsersItems.Add(new SelectListItem(localizer["PleaseSelect"].Value, ""));
    foreach (var candidateUser in candidateUsers)
    {
        candidateUsersItems.Add(new SelectListItem()
                {
                    Value = candidateUser.Id.ToString(),
                    Text = $"{candidateUser.UserFirstname} {candidateUser.UserLastname}"
                });
    }

    List<RoleUser> interviewerUsers = ViewBag.InterviewerUsers;
    List<SelectListItem> interviewerUsersItems = new List<SelectListItem>();
    interviewerUsersItems.Add(new SelectListItem(localizer["PleaseSelect"].Value, ""));
    foreach (var interviewerUser in interviewerUsers)
    {
        interviewerUsersItems.Add(new SelectListItem()
                {
                    Value = interviewerUser.Id.ToString(),
                    Text = $"{interviewerUser.UserFirstname} {interviewerUser.UserLastname}",
                    Selected = interviewerUser.UserId == Model.InterviewerUserId
                });
    }

    List<RoleUser> leadUsers = ViewBag.LeadUsers;
    List<SelectListItem> leadItems = new List<SelectListItem>();
    leadItems.Add(new SelectListItem(localizer["PleaseSelect"].Value, ""));
    foreach (var leadUser in leadUsers)
    {
        leadItems.Add(new SelectListItem()
                {
                    Value = leadUser.Id.ToString(),
                    Text = $"{leadUser.UserFirstname} {leadUser.UserLastname}"
                });
    }

}

<label>@localizer["AddMemberToTimeSlot"]</label>

<form id="userForm" action="@Url.Action("AddInterviewMember", "Default")" method="post">

    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.InterviewId)

    <div class="row">
        @Html.RadioButtonFor(x => x.RoleType, (int)RoleTypes.Candidate, new { @id = "Candidate", @class = "form-check-input" })
        <label for="Candidate" class="form-check-label">@localizer["Candidate"]</label>
    </div>

    <div class="row">
        @Html.RadioButtonFor(x => x.RoleType, (int)RoleTypes.Interviewer, new { @id = "Interviewer", @class = "form-check-input" })
        <label for="Interviewer" class="form-check-label">@localizer["Interviewer"]</label>
    </div>

    <div class="row">
        @Html.RadioButtonFor(x => x.RoleType, (int)RoleTypes.Lead, new { @id = "Lead", @class = "form-check-input" })
        <label for="Lead" class="form-check-label">@localizer["Lead"]</label>
    </div>

    <div id="candidateUsers" class="interviewerRole" style="display: none">
        @Html.EditorFor(x => x.CandidateUserId, "Question", new { inputControl = @Html.DropDownListFor(x => x.CandidateUserId, candidateUsersItems, new { @class = "form-control" }) })
    </div>

    <div id="interviewerUsers" class="interviewerRole" style="display: none">
        @Html.EditorFor(x => x.InterviewerUserId, "Question", new { inputControl = @Html.DropDownListFor(x => x.InterviewerUserId, interviewerUsersItems, new { @class = "form-control" }) })
    </div>

    <div id="leadUsers" class="interviewerRole" style="display: none">
        @Html.EditorFor(x => x.InterviewerLeadUserId, "Question", new { inputControl = @Html.DropDownListFor(x => x.InterviewerLeadUserId, leadItems, new { @class = "form-control" }) })
    </div>

    <div class="row">
        <input id="btnAddMember" type="submit" value="@localizer["AddThisMember"]" class="btn btn-primary" />
    </div>

</form>